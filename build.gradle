plugins {
	id 'org.springframework.boot' version '1.5.4.RELEASE'
	id 'com.palantir.docker' version '0.13.0'
	id 'com.palantir.docker-run' version '0.13.0'
	id 'com.github.ben-manes.versions' version '0.15.0'
	id 'java'
	id 'eclipse'
}

group = 'ptiringo'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
	baseName = 'japan-commercial-map-api'
	version = '0.0.1-SNAPSHOT'
}

ext {
	profile = getProperty('spring.profiles.active') ?: PROFILE ?: "development"
	dockerImageName = "${group}/${jar.baseName}:${jar.version}"
}

repositories { jcenter() }

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compileOnly 'org.projectlombok:lombok:1.16.16'
	runtime 'org.postgresql:postgresql'

	if (profile == "development") {
		compile 'org.springframework.data:spring-data-rest-hal-browser'
		compile 'org.springframework.boot:spring-boot-devtools'
	}

	// test
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootRun { systemProperties = System.properties }

docker {
	name dockerImageName
	files jar
	dependsOn bootRepackage
}

dockerRun {
	name "${group}_${jar.baseName}_${jar.version}"
	image dockerImageName
	ports '8080'
}

task stage {
	dependsOn clean, assemble
}

task wrapper(type: Wrapper) { gradleVersion = '3.5' }