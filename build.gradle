plugins {
	id 'org.springframework.boot' version '1.5.6.RELEASE'
	id 'com.github.ben-manes.versions' version '0.15.0'
	id 'com.palantir.docker' version '0.13.0'
	id 'com.palantir.docker-run' version '0.13.0'
	id 'java'
	id 'eclipse'
}

ext {
	profile = findProperty('spring.profiles.active') ?: "development"
	println "profile=$profile"
}

group = 'ptiringo'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
	baseName = 'japan-commercial-map-api'
	version = '0.0.1-SNAPSHOT'
}

repositories { jcenter() }

task stage {
	description 'Herokuデプロイ時に実行されるタスク'
	profile = 'production' // 開発用のライブラリを含めないようにプロファイルを上書きする
	dependsOn assemble
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-data-rest'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok:1.16.18'
	runtime 'org.postgresql:postgresql'

	if (profile == "development") {
		compile 'org.springframework.data:spring-data-rest-hal-browser'
		compile 'org.springframework.boot:spring-boot-devtools'
	}

	// test
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootRun { systemProperties = System.properties }

task wrapper(type: Wrapper) { gradleVersion = '3.5' }

apply from: 'gradle/docker.gradle'