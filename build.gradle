plugins {
    id 'org.springframework.boot' version '2.0.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'com.palantir.docker' version '0.19.2'
    id 'com.palantir.docker-run' version '0.19.2'
    id 'com.avast.gradle.docker-compose' version '0.7.1'
    id 'org.jetbrains.kotlin.jvm' version '1.2.41'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.2.41'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.2.41'
    id 'org.flywaydb.flyway' version '5.0.7'
    id 'eclipse'
}

group = 'ptiringo'
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'japan-commercial-map-api'
    version = '0.0.1-SNAPSHOT'
}

repositories {
    jcenter()
}

task stage {
    description = 'Herokuデプロイ時に実行されるタスク'
    dependsOn assemble
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'de.grundid.opendatalab:geojson-jackson:1.8'
    compile 'org.flywaydb:flyway-core'
    runtime 'org.postgresql:postgresql'

    // only development
    compile 'org.springframework.boot:spring-boot-devtools'
    compile 'org.springframework.boot:spring-boot-properties-migrator'

    // only test
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootRun { systemProperties = System.properties }

test {
    testLogging.exceptionFormat = 'full'
}

dockerCompose.isRequiredBy(test)

task wrapper(type: Wrapper) { gradleVersion = '4.6' }

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply from: 'gradle/docker.gradle'
apply from: 'gradle/flyway.gradle'